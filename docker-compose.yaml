version: "3"
services:
  database:
    image: postgres
    container_name: acft-tracker-db
    restart: unless-stopped
    # Load all env vars from .env into the container's environment.
    env_file: .env
    ports:
      - 5432:5432
    networks:
      - acft-tracker_network
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./db/migration.sql:/docker-entrypoint-initdb.d/migration.sql
      - ./db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
  server:
    image: acft-tracker/server
    container_name: acft-tracker-api
    restart: unless-stopped
    build: ./server
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database/${POSTGRES_DB}
      NODE_ENV: development
      PORT: 80
    depends_on:
      - database
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - acft-tracker_network
    volumes:
      # This allows live reload inside a docker container by mapping your
      # filesystem to the container's.
      - ./server/src:/code/src
    command: npm start
  client:
    image: acft-tracker/client
    container_name: acft-tracker-app
    restart: unless-stopped
    build: ./client
    environment:
      API_URL: http://acft-tracker-api
      PORT: ${SERVER_PORT}
    depends_on:
      - server
    ports:
      - ${CLIENT_PORT}:80
    networks:
      - acft-tracker_network
    volumes:
      # This allows live reload inside a docker container by mapping your
      # filesystem to the container's.
      - ./client/src:/code/src
networks:
  acft-tracker_network:
volumes:
  pg-data:
